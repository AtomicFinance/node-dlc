name: node-dlc workflows

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rust-dlc-cli/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('rust-dlc-cli/Cargo.lock') }}-git-deps
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libzmq3-dev build-essential

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Bootstrap packages
        run: yarn bootstrap

      - name: Check code formatting
        run: yarn format

      - name: Run linting
        run: yarn lint

      - name: Build rust-dlc-cli for compatibility tests
        run: |
          if [ -d "rust-dlc-cli" ]; then
            echo "Building rust-dlc-cli for compatibility tests..."
            cd rust-dlc-cli
            # Pre-fetch git dependencies to avoid network timeouts during tests
            cargo fetch
            cargo build --release
          else
            echo "rust-dlc-cli directory not found, skipping Rust CLI build"
          fi
        timeout-minutes: 15

      - name: Run tests
        run: yarn test
        timeout-minutes: 30
